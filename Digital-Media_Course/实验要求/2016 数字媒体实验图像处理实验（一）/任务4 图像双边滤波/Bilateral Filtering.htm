
<!-- saved from url=(0103)http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Experiments2 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=GBK">
   <title>Bilateral Filtering</title>
   <meta name="GENERATOR" content="Claris Home Page 2.0">
   </head><body bgcolor="#FFFFFF"><x-sas-window top="51" bottom="967" left="106" right="1113">



<h1><font size="+4" color="#000000">Bilateral Filtering for Gray and
Color Images</font></h1>

<p><font size="+1" color="#000000">&nbsp;</font></p>

<ol>
   <li><font size="+1" color="#000000"><a name="Index"></a></font><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Introduction">Introduction</a></font>
   
   </li><li><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#The Idea">The
   Idea</a></font>
   
   </li><li><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#The Gaussian Case">The Gaussian
   Case</a></font>
   
   </li><li><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Experiments1">Experiments with
   Black-and-White Images</a></font>
   
   </li><li><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Experiments2">Experiments with Color
   Images</a></font>
   
   </li><li><font size="+1" color="#000000"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#References">References</a></font>
</li></ol>

<h3><font size="+1"><a name="Introduction"></a>Introduction</font>
</h3>

<p><font size="+1">Filtering is perhaps the most fundamental
operation of image processing and computer vision. In the broadest
sense of the term "filtering", the value of the filtered image at a
given location is a function of the values of the input image in a
small neighborhood of the same location. For example, Gaussian
low-pass filtering computes a weighted average of pixel values in the
neighborhood, in which the weights decrease with distance from the
neighborhood center. Although formal and quantitative explanations of
this weight fall-off can be given, the intuition is that images
typically vary slowly over space, so near pixels are likely to have
similar values, and it is therefore appropriate to average them
together. The noise values that corrupt these nearby pixels are
mutually less correlated than the signal values, so noise is averaged
away while signal is preserved.<br>

The assumption of slow spatial variations fails at edges, which are
consequently blurred by linear low-pass filtering. How can we prevent
averaging across edges, while still averaging within smooth regions?
</font><font size="+1"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#References">Many
efforts</a></font><font size="+1"> have been devoted to reducing this
undesired effect. </font><font size="+1"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#[1]">Bilateral
filtering</a></font><font size="+1"> is a simple, non-iterative
scheme for </font><i><font size="+1">edge-preserving
smoothing</font></i><font size="+1">.<br>

<br>

</font><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Index">Back to Index</a></p>

<h3><font size="+1"><a name="The Idea"></a>The Idea</font></h3>

<p><font size="+1">The basic idea underlying bilateral filtering is
to do in the range of an image what traditional filters do in its
domain. Two pixels can be </font><i><font size="+1">close</font></i><font size="+1"> to one another, that is,
occupy nearby spatial location, or they can be </font><i><font size="+1">similar</font></i><font size="+1"> to one another, that is,
have nearby values, possibly in a perceptually meaningful
fashion.<br>

Consider a shift-invariant low-pass domain filter applied to an
image:<br>

<img src="./Bilateral Filtering_files/image514.gif" width="323" height="55" align="bottom"><br>

The bold font for </font><b><font size="+1">f</font></b><font size="+1"> and </font><b><font size="+1">h</font></b><font size="+1">
emphasizes the fact that both input and output images may be
multi-band. In order to preserve the DC component, it must be<br>

<img src="./Bilateral Filtering_files/image746.gif" width="181" height="49" align="bottom"><br>

Range filtering is similarly defined:<br>

<img src="./Bilateral Filtering_files/image397.gif" width="424" height="56" align="bottom"><br>

In this case, the kernel measures the </font><i><font size="+1">photometric</font></i><font size="+1"> similarity between
pixels. The normalization constant in this case is<br>

<img src="./Bilateral Filtering_files/image053.gif" width="298" height="53" align="bottom"><br>

The spatial distribution of image intensities plays no role in range
filtering taken by itself. Combining intensities from the entire
image, however, makes little sense, since the distribution of image
values far away from </font><b><font size="+1">x</font></b><font size="+1"> ought not to affect the final value at </font><b><font size="+1">x</font></b><font size="+1">. In addition, one can show
that range filtering without domain filtering merely changes the
color map of an image, and is therefore of little use. The
appropriate solution is to combine domain and range filtering,
thereby enforcing both geometric and photometric locality. Combined
filtering can be described as follows:<br>

<img src="./Bilateral Filtering_files/image477.gif" width="435" height="58" align="bottom"><br>

with the normalization<br>

<img src="./Bilateral Filtering_files/image788.gif" width="381" height="52" align="bottom"><br>

Combined domain and range filtering will be denoted as
</font><i><font size="+1">bilateral filtering</font></i><font size="+1">. It replaces the pixel value at </font><b><font size="+1">x</font></b><font size="+1"> with an average of similar and
nearby pixel values. In smooth regions, pixel values in a small
neighborhood are similar to each other, and the bilateral filter acts
essentially as a standard domain filter, averaging away the small,
weakly correlated differences between pixel values caused by noise.
Consider now a sharp boundary between a dark and a bright region, as
in figure 1(a).<br>

</font><table border="0">
   <tbody><tr>
      <td>
         <p></p><center><font size="+1"><img src="./Bilateral Filtering_files/step-orig.gif" width="256" height="174" border="1" align="bottom"></font></center>
      </td><td>
         <p></p><center><font size="+1"><img src="./Bilateral Filtering_files/step-sim.gif" width="256" height="174" border="1" align="bottom"></font></center>
      </td><td>
         <p><font size="+1"><img src="./Bilateral Filtering_files/step-filt.gif" width="256" height="174" border="1" align="bottom"></font>
      </p></td></tr>
   <tr>
      <td>
         <p></p><center><b><font size="+1">(a)</font></b></center>
      </td><td>
         <p></p><center><b><font size="+1">(b)</font></b></center>
      </td><td>
         <p></p><center><b>(c)</b></center>
      </td></tr>
   <tr>
      <td>
         <p>
      </p></td><td>
         <p></p><center><b><font size="+1">Figure 1</font></b></center>
      </td><td>
         <p>
      </p></td></tr>
</tbody></table><font size="+1"><br>

When the bilateral filter is centered, say, on a pixel on the bright
side of the boundary, the similarity function </font><i><font size="+1">s</font></i><font size="+1"> assumes values close to one
for pixels on the same side, and values close to zero for pixels on
the dark side. The similarity function is shown in figure 1(b) for a
23x23 filter support centered two pixels to the right of the step in
figure 1(a). The normalization term </font><i><font size="+1">k(</font></i><b><i><font size="+1">x</font></i></b><i><font size="+1">) </font></i><font size="+1"> ensures that the weights for
all the pixels add up to one. As a result, the filter replaces the
bright pixel at the center by an average of the bright pixels in its
vicinity, and essentially ignores the dark pixels. Conversely, when
the filter is centered on a dark pixel, the bright pixels are ignored
instead. Thus, as shown in figure 1(c), good filtering behavior is
achieved at the boundaries, thanks to the domain component of the
filter, and crisp edges are preserved at the same time, thanks to the
range component.<br>

<br>

</font><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Index">Back to Index</a></p>

<h3><font size="+1"><a name="The Gaussian Case"></a>The Gaussian
Case</font></h3>

<p><font size="+1">A simple and important case of bilateral filtering
is shift-invariant Gaussian filtering, in which both the closeness
function </font><i><font size="+1">c</font></i><font size="+1"> and
the similarity function </font><i><font size="+1">s</font></i><font size="+1"> are Gaussian functions of the Euclidean distance between
their arguments. More specifically, </font><i><font size="+1">c</font></i><font size="+1"> is radially symmetric:<br>

<img src="./Bilateral Filtering_files/image548.gif" width="212" height="76" align="bottom"><br>

where<br>

<img src="./Bilateral Filtering_files/image710.gif" width="169" height="40" align="bottom"><br>

is the Euclidean distance. The similarity function </font><i><font size="+1">s</font></i><font size="+1"> is perfectly analogous to
</font><i><font size="+1">c</font></i><font size="+1"> :<br>

<img src="./Bilateral Filtering_files/image865.gif" width="276" height="78" align="bottom"><br>

where<br>

<img src="./Bilateral Filtering_files/image347.gif" width="304" height="34" align="bottom"><br>

is a suitable measure of distance in intensity space. In the scalar
case, this may be simply the absolute difference of the pixel
difference or, since noise increases with image intensity, an
intensity-dependent version of it. Just as this form of domain
filtering is shift-invariant, the Gaussian range filter introduced
above is insensitive to overall additive changes of image intensity.
Of course, the range filter is shift-invariant as well.<br>

<br>

</font><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Index">Back to Index</a><br>

</p>

<h3><font size="+1"><a name="Experiments1"></a>Experiments with
Black-and-White Images</font></h3>

<p><font size="+1">Figure 2 (a) and (b) show the potential of
bilateral filtering for the removal of texture. The picture
"simplification" illustrated by figure 2 (b) can be useful for data
reduction without loss of overall shape features in applications such
as image transmission, picture editing and manipulation, image
description for retrieval.<br>

</font></p>

<p><table border="0" width="62%">
   <tbody><tr>
      <td width="232" height="259">
         <p><img src="./Bilateral Filtering_files/kitten-orig.gif" width="223" height="244" align="bottom">
      </p></td><td width="123" height="259">
         <p>
      </p></td><td height="259">
         <p><img src="./Bilateral Filtering_files/kitten-filt.gif" width="223" height="244" align="bottom">
      </p></td></tr>
   <tr>
      <td width="232">
         <p></p><center><b><font size="+1">(a)</font></b></center>
      </td><td width="123">
         <p>
      </p></td><td>
         <p></p><center><b><font size="+1">(b)</font></b></center>
      </td></tr>
   <tr>
      <td width="232">
         <p>
      </p></td><td width="123">
         <p></p><center><b><font size="+1">Figure 2</font></b></center>
      </td><td>
         <p>
      </p></td></tr>
</tbody></table><font size="+1"><br>

</font></p>

<p><font size="+1">Bilateral filtering with parameters </font><font size="+2" face="Symbol">s</font>d<font size="+1"> =3 pixels and
</font><font size="+2" face="Symbol">s</font>r<font size="+1"> =50
intensity values is applied to the image in figure 3 (a) to yield the
image in figure 3 (b). Notice that most of the fine texture has been
filtered away, and yet all contours are as crisp as in the original
image. Figure 3 (c) shows a detail of figure 3 (a), and figure 3 (d)
shows the corresponding filtered version. The two onions have assumed
a graphics-like appearance, and the fine texture has gone. However,
the overall shading is preserved, because it is well within the band
of the domain filter and is almost unaffected by the range filter.
Also, the boundaries of the onions are preserved.<br>

</font><table border="0" width="85%">
   <tbody><tr>
      <td width="340">
         <p></p><center><img src="./Bilateral Filtering_files/snack-orig.gif" width="333" height="222" align="bottom"></center>
      </td><td width="128">
         <p>
      </p></td><td>
         <p></p><center><img src="./Bilateral Filtering_files/snack-filt.gif" width="333" height="222" align="bottom"></center>
      </td></tr>
   <tr>
      <td width="340">
         <p></p><center><b><font size="+1">(a)</font></b></center>
      </td><td width="128">
         <p>
      </p></td><td>
         <p></p><center><b><font size="+1">(b)</font></b></center>
      </td></tr>
   <tr>
      <td width="340" height="286">
         <p></p><center><img src="./Bilateral Filtering_files/onions-orig.gif" width="333" height="273" align="bottom"></center><p></p>
         
         <p></p><center>&nbsp;</center>
      </td><td width="128" height="286">
         <p>
      </p></td><td height="286">
         <p></p><center><img src="./Bilateral Filtering_files/onions-filt.gif" width="333" height="273" align="bottom"></center><p></p>
         
         <p></p><center>&nbsp;</center>
      </td></tr>
   <tr>
      <td width="340">
         <p></p><center><b><font size="+1">(c)</font></b></center>
      </td><td width="128">
         <p>
      </p></td><td>
         <p></p><center><b><font size="+1">(d)</font></b></center>
      </td></tr>
   <tr>
      <td width="340">
         <p>
      </p></td><td width="128">
         <p></p><center><b><font size="+1">Figure 3</font></b></center>
      </td><td>
         <p>
      </p></td></tr>
</tbody></table><font size="+1"><br>

</font><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Index">Back to Index</a><br>

</p>

<h3><font size="+1"><a name="Experiments2"></a>Experiments with Color
Images</font></h3>

<p><font size="+1">For black-and-white images, intensities between
any two gray levels are still gray levels. As a consequence, when
smoothing black-and-white images with a standard low-pass filter,
intermediate levels of gray are produced across edges, thereby
producing blurred images. With color images, an additional
complication arises from the fact that between any two colors there
are other, often rather different colors. For instance, between blue
and red there are various shades of pink and purple. Thus, disturbing
color bands may be produced when smoothing across color edges. The
smoothed image does not just look blurred, it also exhibits
odd-looking, colored auras around objects.<br>

</font><table border="0">
   <tbody><tr>
      <td width="110">
         <p></p><center><img src="./Bilateral Filtering_files/jacket.gif" width="100" height="100" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom">
         </center>
      </td><td width="97">
         <p>
      </p></td><td width="109">
         <p></p><center><img src="./Bilateral Filtering_files/jacket_smooth_sep.gif" width="100" height="100" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom"></center>
      </td></tr>
   <tr>
      <td width="110">
         <p></p><center><b><font size="+1">(a)</font></b></center>
      </td><td width="97">
         <p>
      </p></td><td width="109">
         <p></p><center><b><font size="+1">(b)</font></b></center>
      </td></tr>
   <tr>
      <td width="110">
         <p></p><center><img src="./Bilateral Filtering_files/jacket_sharp_sep.gif" width="100" height="100" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom"></center>
      </td><td width="97">
         <p>
      </p></td><td width="109">
         <p></p><center><img src="./Bilateral Filtering_files/jacket_sharp.gif" width="100" height="100" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom">
         </center>
      </td></tr>
   <tr>
      <td width="110">
         <p></p><center><b><font size="+1">(c)</font></b></center>
      </td><td width="97">
         <p>
      </p></td><td width="109">
         <p></p><center><b><font size="+1">(d)</font></b></center>
      </td></tr>
   <tr>
      <td width="110">
         <p>
      </p></td><td width="97">
         <p></p><center><b><font size="+1">Figure 4</font></b></center>
      </td><td width="109">
         <p>
      </p></td></tr>
</tbody></table><font size="+1"><br>

Figure 4 (a) shows a detail from a picture with a red jacket against
a blue sky. Even in this unblurred picture, a thin pink-purple line
is visible, and is caused by a combination of lens blurring and pixel
averaging. In fact, pixels along the boundary, when projected back
into the scene, intersect both red jacket and blue sky, and the
resulting color is the pink average of red and blue. When smoothing,
this effect is emphasized, as the broad, blurred pink-purple area in
figure 4 (b) shows.<br>

To address this difficulty, edge-preserving smoothing could be
applied to the red, green, and blue components of the image
separately. However, the intensity profiles across the edge in the
three color bands are in general different. Smoothing the three color
bands separately results in an even more pronounced pink and purple
band than in the original, as shown in figure 4 (c). The pink-purple
band, however, is not widened as in the standard-blurred version of
figure 4 (b).<br>

A much better result can be obtained with bilateral filtering. In
fact, a bilateral filter allows combining the three color bands
appropriately, and measuring photometric distances between pixels in
the combined space. Moreover, this combined distance can be made to
correspond closely to perceived dissimilarity by using Euclidean
distance in the </font><font size="+1"><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#[16]">CIE-Lab color
space</a></font><font size="+1">. This color space is based on a
large body of psychophysical data concerning color-matching
experiments performed by human observers. In this space, small
Euclidean distances are designed to correlate strongly with the
perception of color discrepancy as experienced by an "average"
color-normal human observer. Thus, in a sense, bilateral filtering
performed in the CIE-Lab color space is the most natural type of
filtering for color images: only perceptually similar colors are
averaged together, and only perceptually important edges are
preserved. Figure 4 (d) shows the image resulting from bilateral
smoothing of the image in figure 4 (a). The pink band has shrunk
considerably, and no extraneous colors appear.<br>

</font><table border="0">
   <tbody><tr>
      <td>
         <p></p><center><img src="./Bilateral Filtering_files/luca.gif" width="320" height="243" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom">
         </center>
      </td><td>
         <p></p><center><img src="./Bilateral Filtering_files/luca_one.gif" width="320" height="243" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom">
         </center>
      </td><td>
         <p></p><center><img src="./Bilateral Filtering_files/luca_five.gif" width="320" height="243" x-sas-useimagewidth="" x-sas-useimageheight="" align="bottom">
         </center>
      </td></tr>
   <tr>
      <td>
         <p></p><center><b><font size="+1">(a)</font></b></center>
      </td><td>
         <p></p><center><b><font size="+1">(b)</font></b></center>
      </td><td>
         <p></p><center><b><font size="+1">(c)</font></b></center>
      </td></tr>
   <tr>
      <td>
         <p>
      </p></td><td>
         <p></p><center><b><font size="+1">Figure 5</font></b></center>
      </td><td>
         <p>
      </p></td></tr>
</tbody></table><font size="+1"><br>

Figure 5 (c) shows the result of five iterations of bilateral
filtering of the image in figure 5 (a). While a single iteration
produces a much cleaner image (figure 5 (b)) than the original, and
is probably sufficient for most image processing needs, multiple
iterations have the effect of flattening the colors in an image
considerably, but without blurring edges. The resulting image has a
much smaller color map, and the effects of bilateral filtering are
easier to see when displayed on a printed page. Notice the
cartoon-like appearance of figure 5 (c). All shadows and edges are
preserved, but most of the shading is gone, and no "new" colors are
introduced by filtering.<br>

<br>

</font><a href="http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/MANDUCHI1/Bilateral_Filtering.html#Index">Back to Index</a><br>

</p>

<h3><font size="+1"><a name="References"></a>References</font></h3>

<p><font size="+1"><a name="[1]"></a>[1] C. Tomasi and R. Manduchi,
"Bilateral Filtering for Gray and Color Images", </font><i><font size="+1">Proceedings of the 1998 IEEE International Conference on
Computer Vision</font></i><font size="+1">, Bombay, India.<br>

[2] T. Boult, R.A. Melter, F. Skorina, and I.
Stojmenovic,"G-neighbors", </font><i><font size="+1">Proceedings of
the SPIE Conference on Vision Geometry II</font></i><font size="+1">,
pages 96-109, 1993.<br>

[3] R.T. Chin and C.L. Yeh, "Quantitative evaluation of some
edge-preserving noise-smoothing techniques", </font><i><font size="+1">Computer Vision, Graphics, and Image
Processing</font></i><font size="+1">, 23:67-91, 1983.<br>

[4] L.S. Davis and A. Rosenfeld, "Noise cleaning by iterated local
averaging", </font><i><font size="+1">IEEE Transactions on Systems,
Man, and Cybernetics</font></i><font size="+1">, 8:705-710, 1978.<br>

[5] R.E. Graham, "Snow-removal - a noise-stripping process for
picture signals", </font><i><font size="+1">IRE Transactions on
Information Theory</font></i><font size="+1">, 8:129-144, 1961.<br>

[6] N. Himayat and S.A. Kassam, "Approximate performance analysis of
edge preserving filters", </font><i><font size="+1">IEEE Transactions
on Signal Processing</font></i><font size="+1">, 41(9):2764-77,
1993.<br>

[7] T.S. Huang, G.J. Yang, and G.Y. Tang, "A fast two-dimensional
median filtering algorithm", </font><i><font size="+1">IEEE
Transactions on Acoustics, Speech, and Signal
Processing</font></i><font size="+1">, 27(1):13-18, 1979.<br>

[8] J.S. Lee, "Digital image enhancement and noise filtering by use
of local statistics", </font><i><font size="+1">IEEE Transactions on
Pattern Analysis and Machine Intelligence</font></i><font size="+1">,
2(2):165-168, 1980.<br>

[9] M. Nagao and T. Matsuyama, "Edge preserving smoothing",
</font><i><font size="+1">Computer Graphics and Image
Processing</font></i><font size="+1">, 9:394-407, 1979.<br>

[10] P.M. Narendra, "A separable median filter for image noise
smoothing", </font><i><font size="+1">IEEE Transactions on Pattern
Analysis and Machine Intelligence</font></i><font size="+1">,
3(1):20-29, 1981.<br>

[11] K.J. Overton and T.E. Weymouth, "A noise reducing preprocessing
algorithm",</font><i><font size="+1">Proceedings of the IEEE Computer
Science Conference on Pattern Recognition and Image
Processing</font></i><font size="+1">, pages 498-507, Chicago, IL,
1979.<br>

[12] P. Perona and J. Malik, "Scale-space and edge detection using
anisotropic diffusion", </font><i><font size="+1">IEEE Transactions
on Pattern Analysis and Machine Intelligence</font></i><font size="+1">, 12(7):629-639, 1990.<br>

[13] G. Ramponi, "A rational edge-preserving smoother",
</font><i><font size="+1">Proceedings of the International Conference
on Image Processing</font></i><font size="+1">, volume 1, pages
151-154, Washington, DC, 1995.<br>

[14] G. Sapiro and D.L. Ringach, "Anisotropic diffusion of color
images", </font><i><font size="+1">Proceedings of the
SPIE</font></i><font size="+1">, volume 2657, pages 471-382,
1996.<br>

[15] D.C.C. Wang, A.H. Vagnucci, and C.C. Li, "A gradient inverse
weighted smoothing scheme and the evaluation of its performance",
</font><i><font size="+1">Computer Vision, Graphics, and Image
Processing</font></i><font size="+1">, 15:167-181, 1981.<br>

<a name="[16]"></a>[16] G. Wyszecki and W. S. Styles, </font><i><font size="+1">Color Science: Concepts and Methods, Quantitative Data and
Formulae</font></i><font size="+1">, John Wiley and Sons, New York,
NY, 1982.<br>

[17] L. Yin, R. Yang, M. Gabbouj, and Y. Neuvo, "Weighted median
filters: a tutorial",IEEE </font><i><font size="+1">Transactions on
Circuits and Systems II: Analog and Digital Signal
Processing</font></i><font size="+1">, 43(3):155-192, 1996.<br>

</font></p>

<p>&nbsp;</p>


</x-sas-window></body></html>